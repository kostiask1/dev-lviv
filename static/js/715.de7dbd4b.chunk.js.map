{"version":3,"file":"static/js/715.de7dbd4b.chunk.js","mappings":"uNA8EA,EAvEkB,WACd,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,EAAmBF,EAAnBE,OAAQC,EAAWH,EAAXG,OACVC,GAAWC,EAAAA,EAAAA,QAAO,OAExBC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,EAAAA,WAAgB,kBAAMN,GAAS,kBAAMM,EAAAA,EAAAA,mBACtC,KAEHD,EAAAA,EAAAA,YAAU,WACNL,EAASM,EAAAA,EAAAA,cACV,CAACA,EAAAA,IAEJ,IAeMC,EAAoB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,OAAQR,EAAa,EAAbA,OAC3CS,IAAAA,IAAA,2DA/BIC,uCA+BJ,0BAEiFF,IAE5EG,MAAK,SAACC,GACH,GAAwB,MAApBA,EAASC,OAAgB,CACzB,IACIZ,EADUW,EAASE,KAAKA,KACTd,GAAUO,EAE7B,OADAN,EAASA,EAAOc,QAAQ,GACjBV,EAAAA,EAAAA,SAAe,CAClBW,KAAMC,EAAAA,GACNC,QAAS,CAAElB,OAAAA,EAAQC,OAAAA,UAMvC,OACI,iBAAKkB,UAAU,YAAf,WACI,2FAGA,iBAAKA,UAAU,kBAAf,WACI,kBACIC,IAAKlB,EACLiB,UAAU,mBACVH,KAAK,OACLK,YAAY,kBAEfpB,GACG,kBAAMkB,UAAU,oBAAhB,mBACalB,EADb,IACsBD,KAEtB,SAER,mBAAQmB,UAAU,oBAAoBG,QAnDzB,WACjB,IAAIC,EAAQrB,EAASsB,QAAQD,MAE7B,GAAqB,KADrBA,EAAQA,EAAME,MAAM,MACVC,OAAV,CACA,IAAMnB,GAAYgB,EAAM,GAClBf,EAASe,EAAM,GACfvB,EAASuB,EAAM,GAEG,kBAAbhB,GACW,IAAlBC,EAAOkB,QACW,IAAlB1B,EAAO0B,QAEPpB,EAAkB,CAAEC,SAAAA,EAAUC,OAAAA,EAAQR,OAAAA,MAuCtC","sources":["pages/Converter/index.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\"\r\nimport \"./index.scss\"\r\nimport store from \"../../app/store\"\r\nimport axios from \"axios\"\r\nimport { CONVERT_CURRENCY } from \"../../app/types\"\r\nconst API = process.env.REACT_APP_API_KEY\r\n\r\nconst Converter = () => {\r\n    const [state, setState] = useState({})\r\n    const { curr_2, result } = state\r\n    const inputRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        store.subscribe(() => setState(() => store.getState()))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setState(store.getState())\r\n    }, [store])\r\n\r\n    const convertValue = () => {\r\n        let value = inputRef.current.value\r\n        value = value.split(\" \")\r\n        if (value.length !== 4) return\r\n        const quantity = +value[0]\r\n        const curr_1 = value[1]\r\n        const curr_2 = value[3]\r\n        if (\r\n            typeof quantity === \"number\" &&\r\n            curr_1.length === 3 &&\r\n            curr_2.length === 3\r\n        )\r\n            convertCurrencies({ quantity, curr_1, curr_2 })\r\n    }\r\n\r\n    const convertCurrencies = ({ quantity, curr_1, curr_2 }) => {\r\n        axios\r\n            .get(\r\n                `https://freecurrencyapi.net/api/v2/latest?apikey=${API}&base_currency=${curr_1}`\r\n            )\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    const rates = response.data.data\r\n                    let result = rates[curr_2] * quantity\r\n                    result = result.toFixed(2)\r\n                    return store.dispatch({\r\n                        type: CONVERT_CURRENCY,\r\n                        payload: { curr_2, result },\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"converter\">\r\n            <p>\r\n                Enter [QUANTITY] [CURRENCY] in [CURRENCY] like = 15 USD in UAH\r\n            </p>\r\n            <div className=\"converter__wrap\">\r\n                <input\r\n                    ref={inputRef}\r\n                    className=\"converter__input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter here...\"\r\n                />\r\n                {result ? (\r\n                    <span className=\"converter__result\">\r\n                        &nbsp;= {result} {curr_2}\r\n                    </span>\r\n                ) : null}\r\n            </div>\r\n            <button className=\"converter__submit\" onClick={convertValue}>\r\n                Convert\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Converter\r\n"],"names":["useState","state","setState","curr_2","result","inputRef","useRef","useEffect","store","convertCurrencies","quantity","curr_1","axios","process","then","response","status","data","toFixed","type","CONVERT_CURRENCY","payload","className","ref","placeholder","onClick","value","current","split","length"],"sourceRoot":""}