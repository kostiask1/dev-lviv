{"version":3,"file":"static/js/715.cd9e5cdb.chunk.js","mappings":"+MA4EA,GAAeA,EAAAA,EAAAA,KAbS,SAAC,GAAD,MAAyB,CAC7CC,OADoB,EAAGA,OAEvBC,OAFoB,EAAWA,WAKR,SAACC,GAAD,MAAe,CACtCC,gBAAiB,gBAAGH,EAAH,EAAGA,OAAQC,EAAX,EAAWA,OAAX,OACbC,EAAS,CACLE,KAAMC,EAAAA,GACNC,QAAS,CAAEN,OAAAA,EAAQC,OAAAA,SAI/B,EArEkB,SAAC,GAAyC,IAAvCD,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQE,EAAsB,EAAtBA,gBAC3BI,GAAWC,EAAAA,EAAAA,QAAO,MAiBlBC,EAAoB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,OAAQX,EAAa,EAAbA,OAC3CY,IAAAA,IAAA,2DArBIC,uCAqBJ,0BAEiFF,IAE5EG,MAAK,SAACC,GACH,GAAwB,MAApBA,EAASC,OAAgB,CACzB,IACIf,EADUc,EAASE,KAAKA,KACTjB,GAAUU,EAE7B,OADAT,EAASA,EAAOiB,QAAQ,GACjBf,EAAgB,CAAEH,OAAAA,EAAQC,OAAAA,SAKjD,OACI,iBAAKkB,UAAU,YAAf,WACI,2FAGA,iBAAKA,UAAU,kBAAf,WACI,kBACIC,IAAKb,EACLY,UAAU,mBACVf,KAAK,OACLiB,YAAY,kBAEfpB,GACG,kBAAMkB,UAAU,oBAAhB,mBACalB,EADb,IACsBD,KAEtB,SAER,mBAAQsB,QAhDK,WACjB,IAAIC,EAAQhB,EAASiB,QAAQD,MAE7B,GAAqB,KADrBA,EAAQA,EAAME,MAAM,MACVC,OAAV,CACA,IAAMhB,GAAYa,EAAM,GAClBZ,EAASY,EAAM,GACfvB,EAASuB,EAAM,GAEG,kBAAbb,GACW,IAAlBC,EAAOe,QACW,IAAlB1B,EAAO0B,QAEPjB,EAAkB,CAAEC,SAAAA,EAAUC,OAAAA,EAAQX,OAAAA,MAoCtC","sources":["pages/Converter/index.js"],"sourcesContent":["import axios from \"axios\"\r\nimport React, { useRef } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { CONVERT_CURRENCY } from \"../../app/types\"\r\nimport \"./index.scss\"\r\nconst API = process.env.REACT_APP_API_KEY\r\n\r\nconst Converter = ({ curr_2, result, convertCurrency }) => {\r\n    const inputRef = useRef(null)\r\n\r\n    const convertValue = () => {\r\n        let value = inputRef.current.value\r\n        value = value.split(\" \")\r\n        if (value.length !== 4) return\r\n        const quantity = +value[0]\r\n        const curr_1 = value[1]\r\n        const curr_2 = value[3]\r\n        if (\r\n            typeof quantity === \"number\" &&\r\n            curr_1.length === 3 &&\r\n            curr_2.length === 3\r\n        )\r\n            convertCurrencies({ quantity, curr_1, curr_2 })\r\n    }\r\n\r\n    const convertCurrencies = ({ quantity, curr_1, curr_2 }) => {\r\n        axios\r\n            .get(\r\n                `https://freecurrencyapi.net/api/v2/latest?apikey=${API}&base_currency=${curr_1}`\r\n            )\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    const rates = response.data.data\r\n                    let result = rates[curr_2] * quantity\r\n                    result = result.toFixed(2)\r\n                    return convertCurrency({ curr_2, result })\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"converter\">\r\n            <p>\r\n                Enter [QUANTITY] [CURRENCY] in [CURRENCY] like = 15 USD in UAH\r\n            </p>\r\n            <div className=\"converter__wrap\">\r\n                <input\r\n                    ref={inputRef}\r\n                    className=\"converter__input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter here...\"\r\n                />\r\n                {result ? (\r\n                    <span className=\"converter__result\">\r\n                        &nbsp;= {result} {curr_2}\r\n                    </span>\r\n                ) : null}\r\n            </div>\r\n            <button onClick={convertValue}>Convert</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ curr_2, result }) => ({\r\n    curr_2,\r\n    result,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    convertCurrency: ({ curr_2, result }) =>\r\n        dispatch({\r\n            type: CONVERT_CURRENCY,\r\n            payload: { curr_2, result },\r\n        }),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Converter)\r\n"],"names":["connect","curr_2","result","dispatch","convertCurrency","type","CONVERT_CURRENCY","payload","inputRef","useRef","convertCurrencies","quantity","curr_1","axios","process","then","response","status","data","toFixed","className","ref","placeholder","onClick","value","current","split","length"],"sourceRoot":""}